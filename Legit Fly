local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local Camera = Workspace["CurrentCamera"]
local Client = Players["LocalPlayer"]
local HRP = Client.Character.HumanoidRootPart

local Horizontal = 64

local OldHRPCFrame = HRP["CFrame"]
local HeartBeatEvent = RunService["Heartbeat"]:Connect(function(DeltaTime)
    local MetaCFrame = CFrame.new(0, 0, 0)
    if UserInputService:IsKeyDown(Enum.KeyCode["W"]) and not UserInputService:IsKeyDown(Enum.KeyCode["S"]) then
        MetaCFrame *= CFrame.new(0, 0, -1)
    elseif UserInputService:IsKeyDown(Enum.KeyCode["S"]) and not UserInputService:IsKeyDown(Enum.KeyCode["W"]) then
        MetaCFrame *= CFrame.new(0, 0, 1)
    end
    if UserInputService:IsKeyDown(Enum.KeyCode["A"]) and not UserInputService:IsKeyDown(Enum.KeyCode["D"]) then
        MetaCFrame *= CFrame.new(-1, 0, 0)
    elseif UserInputService:IsKeyDown(Enum.KeyCode["D"]) and not UserInputService:IsKeyDown(Enum.KeyCode["A"]) then
        MetaCFrame *= CFrame.new(1, 0, 0)
    end
    if UserInputService:IsKeyDown(Enum.KeyCode["Space"]) and not UserInputService:IsKeyDown(Enum.KeyCode["LeftShift"]) then
        MetaCFrame *= CFrame.new(0, 1, 0)
    elseif UserInputService:IsKeyDown(Enum.KeyCode["LeftShift"]) and not UserInputService:IsKeyDown(Enum.KeyCode["Space"]) then
        MetaCFrame *= CFrame.new(0, -1, 0)
    end

    if MetaCFrame["Position"] ~= Vector3.zero then
        MetaCFrame = CFrame.new((MetaCFrame["Position"] - Vector3.zero).Unit * DeltaTime * Horizontal)
    end
    HRP["Velocity"] = Vector3.zero
    HRP["CFrame"] = OldHRPCFrame * MetaCFrame
    OldHRPCFrame = HRP["CFrame"]

    RunService["RenderStepped"]:Wait()
    local AxisX, AxisY, AxisZ = Camera["CFrame"]:ToOrientation()
    OldHRPCFrame = CFrame.new(HRP["CFrame"]["Position"]) * CFrame.Angles(0, math.rad(math.deg(AxisY)), 0)
    HRP["CFrame"] = OldHRPCFrame
end)
